# GitHub Actions Security Pipeline for Crown & Barrel iOS App
# Simplified security checks for small iOS app

name: Security Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

jobs:
  # CodeQL Analysis - Essential for code security
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: macos-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup iOS Environment
        uses: ./.github/actions/setup-ios-environment
        with:
          xcode-version: '26.0.0'
          install-xcodegen: 'true'
          install-swiftlint: 'false'
          install-xcpretty: 'false'
          cache-key-suffix: 'security'
          
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: swift
          
      - name: Generate Xcode Project
        run: |
          echo "Generating Xcode project for CodeQL analysis..."
          xcodegen generate --spec project.yml
          echo "Project generated successfully"
          
      - name: Build for CodeQL Analysis
        run: |
          echo "Building project for CodeQL analysis..."
          xcodegen generate --spec project.yml
          xcodebuild build -project CrownAndBarrel.xcodeproj -scheme CrownAndBarrel -destination "generic/platform=iOS" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Secret Scanning - Essential for credential detection
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run TruffleHog secret scanner
        uses: trufflesecurity/trufflehog@v3.90.8
        with:
          path: ./
          base: ""
          head: ""
          extra_args: --debug --only-verified

  # Security Summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, secret-scan]
    if: always()

    steps:
      - name: Security Summary
        run: |
          echo "## Security Scan Summary"
          echo "========================"
          echo "‚úÖ CodeQL Analysis: ${{ needs.codeql-analysis.result }}"
          echo "‚úÖ Secret Scan: ${{ needs.secret-scan.result }}"
          
          # Check if all security scans passed
          if [[ "${{ needs.codeql-analysis.result }}" == "success" && \
                "${{ needs.secret-scan.result }}" == "success" ]]; then
            echo "üéâ All security scans passed!"
            exit 0
          else
            echo "‚ö†Ô∏è Some security scans failed. Please review the results."
            exit 1
          fi