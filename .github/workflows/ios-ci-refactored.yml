name: iOS CI (Refactored)

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup iOS Environment
        uses: ./.github/actions/setup-ios-environment
        with:
          xcode-version: "16.2"
          install-xcodegen: 'true'
          install-swiftlint: 'false'
          install-xcpretty: 'true'
          cache-key-suffix: 'unit-tests'

      - name: Cache Swift Packages
        uses: ./.github/actions/cache-dependencies
        with:
          cache-type: 'swift-packages'
          cache-key: unit-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            unit-${{ hashFiles('Package.swift') }}
            unit-latest

      - name: Run Unit Tests
        run: |
          # Find the best available iOS 26.0 simulator for unit tests
          echo "Looking for available iOS 26.0 simulators for unit tests..."
          
          # Check for iPhone 16 Pro with iOS 26.0 first (preferred)
          if xcodebuild -showdestinations -scheme CrownAndBarrel -project CrownAndBarrel.xcodeproj 2>/dev/null | grep "platform:iOS Simulator" | grep "iPhone 16 Pro" | grep -q "26.0"; then
            DESTINATION="platform=iOS Simulator,name=iPhone 16 Pro,OS=26.0"
            echo "✅ Found iPhone 16 Pro with iOS 26.0 - using preferred target for unit tests"
          # Fallback to any iPhone with iOS 26.0
          elif xcodebuild -showdestinations -scheme CrownAndBarrel -project CrownAndBarrel.xcodeproj 2>/dev/null | grep "platform:iOS Simulator" | grep "iPhone" | grep -q "26.0"; then
            # Get first available iPhone with iOS 26.0
            IPHONE_26_LINE=$(xcodebuild -showdestinations -scheme CrownAndBarrel -project CrownAndBarrel.xcodeproj 2>/dev/null | grep "platform:iOS Simulator" | grep "iPhone" | grep "26.0" | head -1)
            IPHONE_NAME=$(echo "$IPHONE_26_LINE" | grep -o 'name:[^,]*' | cut -d: -f2)
            DESTINATION="platform=iOS Simulator,name=$IPHONE_NAME,OS=26.0"
            echo "✅ Found $IPHONE_NAME with iOS 26.0 - using fallback target for unit tests"
          else
            echo "❌ No iOS 26.0 simulators found, skipping unit tests"
            exit 0
          fi
          
          echo "Running unit tests with destination: $DESTINATION"
          xcodebuild -project CrownAndBarrel.xcodeproj \
                     -scheme CrownAndBarrel \
                     -destination "$DESTINATION" \
                     -only-testing:CrownAndBarrelTests \
                     test | xcpretty

  ui-tests:
    name: UI Tests (hardened)
    runs-on: macos-14
    needs: unit-tests
    if: success() || failure()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup iOS Environment
        uses: ./.github/actions/setup-ios-environment
        with:
          xcode-version: "16.2"
          install-xcodegen: 'true'
          install-swiftlint: 'false'
          install-xcpretty: 'true'
          cache-key-suffix: 'ui-tests'

      - name: Cache Swift Packages
        uses: ./.github/actions/cache-dependencies
        with:
          cache-type: 'swift-packages'
          cache-key: ui-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ui-${{ hashFiles('Package.swift') }}
            ui-latest

      - name: Run UI Tests with retries and no parallelization
        run: |
          # Find the best available iOS 26.0 simulator for UI tests
          echo "Looking for available iOS 26.0 simulators for UI tests..."
          
          # Check for iPhone 16 Pro with iOS 26.0 first (preferred)
          if xcodebuild -showdestinations -scheme CrownAndBarrel -project CrownAndBarrel.xcodeproj 2>/dev/null | grep "platform:iOS Simulator" | grep "iPhone 16 Pro" | grep -q "26.0"; then
            DESTINATION="platform=iOS Simulator,name=iPhone 16 Pro,OS=26.0"
            echo "✅ Found iPhone 16 Pro with iOS 26.0 - using preferred target for UI tests"
          # Fallback to any iPhone with iOS 26.0
          elif xcodebuild -showdestinations -scheme CrownAndBarrel -project CrownAndBarrel.xcodeproj 2>/dev/null | grep "platform:iOS Simulator" | grep "iPhone" | grep -q "26.0"; then
            # Get first available iPhone with iOS 26.0
            IPHONE_26_LINE=$(xcodebuild -showdestinations -scheme CrownAndBarrel -project CrownAndBarrel.xcodeproj 2>/dev/null | grep "platform:iOS Simulator" | grep "iPhone" | grep "26.0" | head -1)
            IPHONE_NAME=$(echo "$IPHONE_26_LINE" | grep -o 'name:[^,]*' | cut -d: -f2)
            DESTINATION="platform=iOS Simulator,name=$IPHONE_NAME,OS=26.0"
            echo "✅ Found $IPHONE_NAME with iOS 26.0 - using fallback target for UI tests"
          else
            echo "❌ No iOS 26.0 simulators found, skipping UI tests"
            exit 0
          fi
          
          echo "Running UI tests with destination: $DESTINATION"
          xcodebuild -project CrownAndBarrel.xcodeproj \
                     -scheme CrownAndBarrel \
                     -destination "$DESTINATION" \
                     -only-testing:CrownAndBarrelUITests \
                     -retry-tests-on-failure \
                     -test-iterations 2 \
                     -parallel-testing-enabled NO \
                     -maximum-concurrent-test-simulator-destinations 1 \
                     test | xcpretty
